//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Analisis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoAnalisisEntities1 : DbContext
    {
        public ProyectoAnalisisEntities1()
            : base("name=ProyectoAnalisisEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_LoginUsuario_Result> sp_LoginUsuario(string usuario, string password, string direccionIp, string userAgent, string sistemaOperativo, string dispositivo, string browser)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var direccionIpParameter = direccionIp != null ?
                new ObjectParameter("DireccionIp", direccionIp) :
                new ObjectParameter("DireccionIp", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var sistemaOperativoParameter = sistemaOperativo != null ?
                new ObjectParameter("SistemaOperativo", sistemaOperativo) :
                new ObjectParameter("SistemaOperativo", typeof(string));
    
            var dispositivoParameter = dispositivo != null ?
                new ObjectParameter("Dispositivo", dispositivo) :
                new ObjectParameter("Dispositivo", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("Browser", browser) :
                new ObjectParameter("Browser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LoginUsuario_Result>("sp_LoginUsuario", usuarioParameter, passwordParameter, direccionIpParameter, userAgentParameter, sistemaOperativoParameter, dispositivoParameter, browserParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_CRUD_Result> sp_Usuario_CRUD(string accion, string idUsuario, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, Nullable<int> idStatusUsuario, string password, Nullable<int> idGenero, string correoElectronico, string telefonoMovil, Nullable<int> idSucursal, string pregunta, string respuesta, Nullable<int> idRole, byte[] fotografia, Nullable<bool> limpiarFoto, string usuarioAccion, string buscar, Nullable<int> pagina, Nullable<int> tamanoPagina, Nullable<bool> hardDelete, string passwordActual, string passwordNueva)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoMovilParameter = telefonoMovil != null ?
                new ObjectParameter("TelefonoMovil", telefonoMovil) :
                new ObjectParameter("TelefonoMovil", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var preguntaParameter = pregunta != null ?
                new ObjectParameter("Pregunta", pregunta) :
                new ObjectParameter("Pregunta", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            var limpiarFotoParameter = limpiarFoto.HasValue ?
                new ObjectParameter("LimpiarFoto", limpiarFoto) :
                new ObjectParameter("LimpiarFoto", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var tamanoPaginaParameter = tamanoPagina.HasValue ?
                new ObjectParameter("TamanoPagina", tamanoPagina) :
                new ObjectParameter("TamanoPagina", typeof(int));
    
            var hardDeleteParameter = hardDelete.HasValue ?
                new ObjectParameter("HardDelete", hardDelete) :
                new ObjectParameter("HardDelete", typeof(bool));
    
            var passwordActualParameter = passwordActual != null ?
                new ObjectParameter("PasswordActual", passwordActual) :
                new ObjectParameter("PasswordActual", typeof(string));
    
            var passwordNuevaParameter = passwordNueva != null ?
                new ObjectParameter("PasswordNueva", passwordNueva) :
                new ObjectParameter("PasswordNueva", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_CRUD_Result>("sp_Usuario_CRUD", accionParameter, idUsuarioParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, idStatusUsuarioParameter, passwordParameter, idGeneroParameter, correoElectronicoParameter, telefonoMovilParameter, idSucursalParameter, preguntaParameter, respuestaParameter, idRoleParameter, fotografiaParameter, limpiarFotoParameter, usuarioAccionParameter, buscarParameter, paginaParameter, tamanoPaginaParameter, hardDeleteParameter, passwordActualParameter, passwordNuevaParameter);
        }
    
        public virtual ObjectResult<sp_Password_ObtenerPreguntas_Result> sp_Password_ObtenerPreguntas(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Password_ObtenerPreguntas_Result>("sp_Password_ObtenerPreguntas", idUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_PasswordQA_ValidarYActualizar_Result> sp_PasswordQA_ValidarYActualizar(string idUsuario, string respuesta, string nuevaPassword, string direccionIp, string userAgent)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var nuevaPasswordParameter = nuevaPassword != null ?
                new ObjectParameter("NuevaPassword", nuevaPassword) :
                new ObjectParameter("NuevaPassword", typeof(string));
    
            var direccionIpParameter = direccionIp != null ?
                new ObjectParameter("DireccionIp", direccionIp) :
                new ObjectParameter("DireccionIp", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PasswordQA_ValidarYActualizar_Result>("sp_PasswordQA_ValidarYActualizar", idUsuarioParameter, respuestaParameter, nuevaPasswordParameter, direccionIpParameter, userAgentParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Actualizar_Result> sp_Usuario_Actualizar(string idUsuario, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, Nullable<int> idStatusUsuario, string password, Nullable<int> idGenero, string correoElectronico, string telefonoMovil, Nullable<int> idSucursal, string pregunta, string respuesta, Nullable<int> idRole, byte[] fotografia, Nullable<bool> limpiarFoto, string usuarioAccion)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoMovilParameter = telefonoMovil != null ?
                new ObjectParameter("TelefonoMovil", telefonoMovil) :
                new ObjectParameter("TelefonoMovil", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var preguntaParameter = pregunta != null ?
                new ObjectParameter("Pregunta", pregunta) :
                new ObjectParameter("Pregunta", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            var limpiarFotoParameter = limpiarFoto.HasValue ?
                new ObjectParameter("LimpiarFoto", limpiarFoto) :
                new ObjectParameter("LimpiarFoto", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Actualizar_Result>("sp_Usuario_Actualizar", idUsuarioParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, idStatusUsuarioParameter, passwordParameter, idGeneroParameter, correoElectronicoParameter, telefonoMovilParameter, idSucursalParameter, preguntaParameter, respuestaParameter, idRoleParameter, fotografiaParameter, limpiarFotoParameter, usuarioAccionParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_CambiarPassword_Result> sp_Usuario_CambiarPassword(string idUsuario, string passwordActual, string passwordNueva, string usuarioAccion, string direccionIp, string userAgent)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var passwordActualParameter = passwordActual != null ?
                new ObjectParameter("PasswordActual", passwordActual) :
                new ObjectParameter("PasswordActual", typeof(string));
    
            var passwordNuevaParameter = passwordNueva != null ?
                new ObjectParameter("PasswordNueva", passwordNueva) :
                new ObjectParameter("PasswordNueva", typeof(string));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            var direccionIpParameter = direccionIp != null ?
                new ObjectParameter("DireccionIp", direccionIp) :
                new ObjectParameter("DireccionIp", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_CambiarPassword_Result>("sp_Usuario_CambiarPassword", idUsuarioParameter, passwordActualParameter, passwordNuevaParameter, usuarioAccionParameter, direccionIpParameter, userAgentParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Crear_Result> sp_Usuario_Crear(string idUsuario, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, Nullable<int> idGenero, string correoElectronico, string telefonoMovil, Nullable<int> idSucursal, string pregunta, string respuesta, Nullable<int> idRole, string password, Nullable<int> idStatusUsuario, Nullable<bool> requiereCambiarPassword, string usuarioAccion, byte[] fotografia)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoMovilParameter = telefonoMovil != null ?
                new ObjectParameter("TelefonoMovil", telefonoMovil) :
                new ObjectParameter("TelefonoMovil", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var preguntaParameter = pregunta != null ?
                new ObjectParameter("Pregunta", pregunta) :
                new ObjectParameter("Pregunta", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var requiereCambiarPasswordParameter = requiereCambiarPassword.HasValue ?
                new ObjectParameter("RequiereCambiarPassword", requiereCambiarPassword) :
                new ObjectParameter("RequiereCambiarPassword", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Crear_Result>("sp_Usuario_Crear", idUsuarioParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, idGeneroParameter, correoElectronicoParameter, telefonoMovilParameter, idSucursalParameter, preguntaParameter, respuestaParameter, idRoleParameter, passwordParameter, idStatusUsuarioParameter, requiereCambiarPasswordParameter, usuarioAccionParameter, fotografiaParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Eliminar_Result> sp_Usuario_Eliminar(string idUsuario, Nullable<bool> hardDelete, string usuarioAccion)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var hardDeleteParameter = hardDelete.HasValue ?
                new ObjectParameter("HardDelete", hardDelete) :
                new ObjectParameter("HardDelete", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Eliminar_Result>("sp_Usuario_Eliminar", idUsuarioParameter, hardDeleteParameter, usuarioAccionParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Listar_Result> sp_Usuario_Listar(string buscar, Nullable<int> idSucursal, Nullable<int> idStatusUsuario, Nullable<int> idRole, Nullable<int> pagina, Nullable<int> tamanoPagina, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var tamanoPaginaParameter = tamanoPagina.HasValue ?
                new ObjectParameter("TamanoPagina", tamanoPagina) :
                new ObjectParameter("TamanoPagina", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Listar_Result>("sp_Usuario_Listar", buscarParameter, idSucursalParameter, idStatusUsuarioParameter, idRoleParameter, paginaParameter, tamanoPaginaParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Obtener_Result> sp_Usuario_Obtener(string idUsuario, string correoElectronico, Nullable<bool> incluirFoto, Nullable<bool> incluirAuditoria)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var incluirFotoParameter = incluirFoto.HasValue ?
                new ObjectParameter("IncluirFoto", incluirFoto) :
                new ObjectParameter("IncluirFoto", typeof(bool));
    
            var incluirAuditoriaParameter = incluirAuditoria.HasValue ?
                new ObjectParameter("IncluirAuditoria", incluirAuditoria) :
                new ObjectParameter("IncluirAuditoria", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Obtener_Result>("sp_Usuario_Obtener", idUsuarioParameter, correoElectronicoParameter, incluirFotoParameter, incluirAuditoriaParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_CambiarPassword1_Result> sp_Usuario_CambiarPassword1(string idUsuario, string passwordActual, string passwordNueva, string usuarioAccion, string direccionIp, string userAgent)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var passwordActualParameter = passwordActual != null ?
                new ObjectParameter("PasswordActual", passwordActual) :
                new ObjectParameter("PasswordActual", typeof(string));
    
            var passwordNuevaParameter = passwordNueva != null ?
                new ObjectParameter("PasswordNueva", passwordNueva) :
                new ObjectParameter("PasswordNueva", typeof(string));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            var direccionIpParameter = direccionIp != null ?
                new ObjectParameter("DireccionIp", direccionIp) :
                new ObjectParameter("DireccionIp", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_CambiarPassword1_Result>("sp_Usuario_CambiarPassword1", idUsuarioParameter, passwordActualParameter, passwordNuevaParameter, usuarioAccionParameter, direccionIpParameter, userAgentParameter);
        }
    
        public virtual ObjectResult<sp_PasswordQA_ValidarYActualizar1_Result> sp_PasswordQA_ValidarYActualizar1(string idUsuario, string respuesta, string nuevaPassword, string direccionIp, string userAgent)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var nuevaPasswordParameter = nuevaPassword != null ?
                new ObjectParameter("NuevaPassword", nuevaPassword) :
                new ObjectParameter("NuevaPassword", typeof(string));
    
            var direccionIpParameter = direccionIp != null ?
                new ObjectParameter("DireccionIp", direccionIp) :
                new ObjectParameter("DireccionIp", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PasswordQA_ValidarYActualizar1_Result>("sp_PasswordQA_ValidarYActualizar1", idUsuarioParameter, respuestaParameter, nuevaPasswordParameter, direccionIpParameter, userAgentParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Actualizar1_Result> sp_Usuario_Actualizar1(string idUsuario, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, Nullable<int> idGenero, string correoElectronico, string telefonoMovil, Nullable<int> idSucursal, string pregunta, string respuesta, Nullable<int> idRole, Nullable<int> idStatusUsuario, string password, byte[] fotografia, Nullable<bool> limpiarFoto, string usuarioAccion)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoMovilParameter = telefonoMovil != null ?
                new ObjectParameter("TelefonoMovil", telefonoMovil) :
                new ObjectParameter("TelefonoMovil", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var preguntaParameter = pregunta != null ?
                new ObjectParameter("Pregunta", pregunta) :
                new ObjectParameter("Pregunta", typeof(string));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            var limpiarFotoParameter = limpiarFoto.HasValue ?
                new ObjectParameter("LimpiarFoto", limpiarFoto) :
                new ObjectParameter("LimpiarFoto", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Actualizar1_Result>("sp_Usuario_Actualizar1", idUsuarioParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, idGeneroParameter, correoElectronicoParameter, telefonoMovilParameter, idSucursalParameter, preguntaParameter, respuestaParameter, idRoleParameter, idStatusUsuarioParameter, passwordParameter, fotografiaParameter, limpiarFotoParameter, usuarioAccionParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Eliminar1_Result> sp_Usuario_Eliminar1(string idUsuario, Nullable<bool> hardDelete, string usuarioAccion)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var hardDeleteParameter = hardDelete.HasValue ?
                new ObjectParameter("HardDelete", hardDelete) :
                new ObjectParameter("HardDelete", typeof(bool));
    
            var usuarioAccionParameter = usuarioAccion != null ?
                new ObjectParameter("UsuarioAccion", usuarioAccion) :
                new ObjectParameter("UsuarioAccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Eliminar1_Result>("sp_Usuario_Eliminar1", idUsuarioParameter, hardDeleteParameter, usuarioAccionParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Obtener1_Result> sp_Usuario_Obtener1(string idUsuario, string correoElectronico, Nullable<bool> incluirFoto, Nullable<bool> incluirAuditoria)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var incluirFotoParameter = incluirFoto.HasValue ?
                new ObjectParameter("IncluirFoto", incluirFoto) :
                new ObjectParameter("IncluirFoto", typeof(bool));
    
            var incluirAuditoriaParameter = incluirAuditoria.HasValue ?
                new ObjectParameter("IncluirAuditoria", incluirAuditoria) :
                new ObjectParameter("IncluirAuditoria", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Obtener1_Result>("sp_Usuario_Obtener1", idUsuarioParameter, correoElectronicoParameter, incluirFotoParameter, incluirAuditoriaParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_Listar1_Result> sp_Usuario_Listar1(string buscar, Nullable<int> idSucursal, Nullable<int> idStatusUsuario, Nullable<int> idRole, Nullable<int> pagina, Nullable<int> tamanoPagina, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var tamanoPaginaParameter = tamanoPagina.HasValue ?
                new ObjectParameter("TamanoPagina", tamanoPagina) :
                new ObjectParameter("TamanoPagina", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_Listar1_Result>("sp_Usuario_Listar1", buscarParameter, idSucursalParameter, idStatusUsuarioParameter, idRoleParameter, paginaParameter, tamanoPaginaParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Password_ObtenerPreguntas1_Result> sp_Password_ObtenerPreguntas1(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Password_ObtenerPreguntas1_Result>("sp_Password_ObtenerPreguntas1", idUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_Sucursal_Actualizar_Result> sp_Sucursal_Actualizar(Nullable<int> idSucursal, string nombre, string direccion, Nullable<int> idEmpresa, string usuario)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sucursal_Actualizar_Result>("sp_Sucursal_Actualizar", idSucursalParameter, nombreParameter, direccionParameter, idEmpresaParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Sucursal_Crear(string nombre, string direccion, Nullable<int> idEmpresa, string usuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Sucursal_Crear", nombreParameter, direccionParameter, idEmpresaParameter, usuarioParameter);
        }
    
        public virtual int sp_Sucursal_Eliminar(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sucursal_Eliminar", idSucursalParameter);
        }
    
        public virtual ObjectResult<sp_Sucursal_Listar_Result> sp_Sucursal_Listar(Nullable<int> idSucursal, Nullable<int> idEmpresa, string buscarNombre, Nullable<int> page, Nullable<int> pageSize)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sucursal_Listar_Result>("sp_Sucursal_Listar", idSucursalParameter, idEmpresaParameter, buscarNombreParameter, pageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Empresa_Actualizar(Nullable<int> idEmpresa, string usuario, string nombre, string direccion, string nit, Nullable<int> passwordCantidadMayusculas, Nullable<int> passwordCantidadMinusculas, Nullable<int> passwordCantidadCaracteresEspeciales, Nullable<int> passwordCantidadCaducidadDias, Nullable<int> passwordLargo, Nullable<int> passwordIntentosAntesDeBloquear, Nullable<int> passwordCantidadNumeros, Nullable<int> passwordCantidadPreguntasValidar)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(string));
    
            var passwordCantidadMayusculasParameter = passwordCantidadMayusculas.HasValue ?
                new ObjectParameter("PasswordCantidadMayusculas", passwordCantidadMayusculas) :
                new ObjectParameter("PasswordCantidadMayusculas", typeof(int));
    
            var passwordCantidadMinusculasParameter = passwordCantidadMinusculas.HasValue ?
                new ObjectParameter("PasswordCantidadMinusculas", passwordCantidadMinusculas) :
                new ObjectParameter("PasswordCantidadMinusculas", typeof(int));
    
            var passwordCantidadCaracteresEspecialesParameter = passwordCantidadCaracteresEspeciales.HasValue ?
                new ObjectParameter("PasswordCantidadCaracteresEspeciales", passwordCantidadCaracteresEspeciales) :
                new ObjectParameter("PasswordCantidadCaracteresEspeciales", typeof(int));
    
            var passwordCantidadCaducidadDiasParameter = passwordCantidadCaducidadDias.HasValue ?
                new ObjectParameter("PasswordCantidadCaducidadDias", passwordCantidadCaducidadDias) :
                new ObjectParameter("PasswordCantidadCaducidadDias", typeof(int));
    
            var passwordLargoParameter = passwordLargo.HasValue ?
                new ObjectParameter("PasswordLargo", passwordLargo) :
                new ObjectParameter("PasswordLargo", typeof(int));
    
            var passwordIntentosAntesDeBloquearParameter = passwordIntentosAntesDeBloquear.HasValue ?
                new ObjectParameter("PasswordIntentosAntesDeBloquear", passwordIntentosAntesDeBloquear) :
                new ObjectParameter("PasswordIntentosAntesDeBloquear", typeof(int));
    
            var passwordCantidadNumerosParameter = passwordCantidadNumeros.HasValue ?
                new ObjectParameter("PasswordCantidadNumeros", passwordCantidadNumeros) :
                new ObjectParameter("PasswordCantidadNumeros", typeof(int));
    
            var passwordCantidadPreguntasValidarParameter = passwordCantidadPreguntasValidar.HasValue ?
                new ObjectParameter("PasswordCantidadPreguntasValidar", passwordCantidadPreguntasValidar) :
                new ObjectParameter("PasswordCantidadPreguntasValidar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Empresa_Actualizar", idEmpresaParameter, usuarioParameter, nombreParameter, direccionParameter, nitParameter, passwordCantidadMayusculasParameter, passwordCantidadMinusculasParameter, passwordCantidadCaracteresEspecialesParameter, passwordCantidadCaducidadDiasParameter, passwordLargoParameter, passwordIntentosAntesDeBloquearParameter, passwordCantidadNumerosParameter, passwordCantidadPreguntasValidarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Empresa_Crear(string nombre, string direccion, string nit, string usuario, Nullable<int> passwordCantidadMayusculas, Nullable<int> passwordCantidadMinusculas, Nullable<int> passwordCantidadCaracteresEspeciales, Nullable<int> passwordCantidadCaducidadDias, Nullable<int> passwordLargo, Nullable<int> passwordIntentosAntesDeBloquear, Nullable<int> passwordCantidadNumeros, Nullable<int> passwordCantidadPreguntasValidar)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passwordCantidadMayusculasParameter = passwordCantidadMayusculas.HasValue ?
                new ObjectParameter("PasswordCantidadMayusculas", passwordCantidadMayusculas) :
                new ObjectParameter("PasswordCantidadMayusculas", typeof(int));
    
            var passwordCantidadMinusculasParameter = passwordCantidadMinusculas.HasValue ?
                new ObjectParameter("PasswordCantidadMinusculas", passwordCantidadMinusculas) :
                new ObjectParameter("PasswordCantidadMinusculas", typeof(int));
    
            var passwordCantidadCaracteresEspecialesParameter = passwordCantidadCaracteresEspeciales.HasValue ?
                new ObjectParameter("PasswordCantidadCaracteresEspeciales", passwordCantidadCaracteresEspeciales) :
                new ObjectParameter("PasswordCantidadCaracteresEspeciales", typeof(int));
    
            var passwordCantidadCaducidadDiasParameter = passwordCantidadCaducidadDias.HasValue ?
                new ObjectParameter("PasswordCantidadCaducidadDias", passwordCantidadCaducidadDias) :
                new ObjectParameter("PasswordCantidadCaducidadDias", typeof(int));
    
            var passwordLargoParameter = passwordLargo.HasValue ?
                new ObjectParameter("PasswordLargo", passwordLargo) :
                new ObjectParameter("PasswordLargo", typeof(int));
    
            var passwordIntentosAntesDeBloquearParameter = passwordIntentosAntesDeBloquear.HasValue ?
                new ObjectParameter("PasswordIntentosAntesDeBloquear", passwordIntentosAntesDeBloquear) :
                new ObjectParameter("PasswordIntentosAntesDeBloquear", typeof(int));
    
            var passwordCantidadNumerosParameter = passwordCantidadNumeros.HasValue ?
                new ObjectParameter("PasswordCantidadNumeros", passwordCantidadNumeros) :
                new ObjectParameter("PasswordCantidadNumeros", typeof(int));
    
            var passwordCantidadPreguntasValidarParameter = passwordCantidadPreguntasValidar.HasValue ?
                new ObjectParameter("PasswordCantidadPreguntasValidar", passwordCantidadPreguntasValidar) :
                new ObjectParameter("PasswordCantidadPreguntasValidar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Empresa_Crear", nombreParameter, direccionParameter, nitParameter, usuarioParameter, passwordCantidadMayusculasParameter, passwordCantidadMinusculasParameter, passwordCantidadCaracteresEspecialesParameter, passwordCantidadCaducidadDiasParameter, passwordLargoParameter, passwordIntentosAntesDeBloquearParameter, passwordCantidadNumerosParameter, passwordCantidadPreguntasValidarParameter);
        }
    
        public virtual int sp_Empresa_Eliminar(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Empresa_Eliminar", idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_Empresa_Listar_Result> sp_Empresa_Listar(Nullable<int> idEmpresa, string buscarNombre, string nit, Nullable<int> page, Nullable<int> pageSize)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Empresa_Listar_Result>("sp_Empresa_Listar", idEmpresaParameter, buscarNombreParameter, nitParameter, pageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Role_Actualizar(Nullable<int> idRole, string nombre, string usuario)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Role_Actualizar", idRoleParameter, nombreParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_Role_Crear(string nombre, string usuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_Role_Crear", nombreParameter, usuarioParameter);
        }
    
        public virtual int sp_Role_Eliminar(Nullable<int> idRole, string usuario)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Role_Eliminar", idRoleParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Role_Listar_Result> sp_Role_Listar(Nullable<int> idRole, string nombre)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("IdRole", idRole) :
                new ObjectParameter("IdRole", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Role_Listar_Result>("sp_Role_Listar", idRoleParameter, nombreParameter);
        }
    
        public virtual int sp_Genero_Actualizar(Nullable<int> idGenero, string nombre, string usuario)
        {
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Genero_Actualizar", idGeneroParameter, nombreParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_Genero_Crear(string nombre, string usuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_Genero_Crear", nombreParameter, usuarioParameter);
        }
    
        public virtual int sp_Genero_Eliminar(Nullable<int> idGenero, Nullable<bool> hardDelete, string usuario)
        {
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var hardDeleteParameter = hardDelete.HasValue ?
                new ObjectParameter("HardDelete", hardDelete) :
                new ObjectParameter("HardDelete", typeof(bool));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Genero_Eliminar", idGeneroParameter, hardDeleteParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Genero_Listar_Result> sp_Genero_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Genero_Listar_Result>("sp_Genero_Listar");
        }
    
        public virtual int sp_StatusUsuario_Actualizar(Nullable<int> idStatusUsuario, string nombre, string usuario)
        {
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StatusUsuario_Actualizar", idStatusUsuarioParameter, nombreParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_StatusUsuario_Crear(string nombre, string usuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_StatusUsuario_Crear", nombreParameter, usuarioParameter);
        }
    
        public virtual int sp_StatusUsuario_Eliminar(Nullable<int> idStatusUsuario)
        {
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StatusUsuario_Eliminar", idStatusUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_StatusUsuario_Listar_Result> sp_StatusUsuario_Listar(Nullable<int> idStatusUsuario, string buscarNombre, Nullable<int> page, Nullable<int> pageSize)
        {
            var idStatusUsuarioParameter = idStatusUsuario.HasValue ?
                new ObjectParameter("IdStatusUsuario", idStatusUsuario) :
                new ObjectParameter("IdStatusUsuario", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StatusUsuario_Listar_Result>("sp_StatusUsuario_Listar", idStatusUsuarioParameter, buscarNombreParameter, pageParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<sp_Genero_Listar_conBusqueda_Result> sp_Genero_Listar_conBusqueda(string buscar, Nullable<int> pagina, Nullable<int> tamanoPagina, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var tamanoPaginaParameter = tamanoPagina.HasValue ?
                new ObjectParameter("TamanoPagina", tamanoPagina) :
                new ObjectParameter("TamanoPagina", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Genero_Listar_conBusqueda_Result>("sp_Genero_Listar_conBusqueda", buscarParameter, paginaParameter, tamanoPaginaParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Role_Listar_Busqueda_Result> sp_Role_Listar_Busqueda(string buscar, Nullable<int> pagina, Nullable<int> tamanoPagina, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var tamanoPaginaParameter = tamanoPagina.HasValue ?
                new ObjectParameter("TamanoPagina", tamanoPagina) :
                new ObjectParameter("TamanoPagina", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Role_Listar_Busqueda_Result>("sp_Role_Listar_Busqueda", buscarParameter, paginaParameter, tamanoPaginaParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual int sp_Opcion_Actualizar(Nullable<int> idOpcion, Nullable<int> idMenu, string nombre, string pagina, Nullable<int> ordenMenu, string usuario)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paginaParameter = pagina != null ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Opcion_Actualizar", idOpcionParameter, idMenuParameter, nombreParameter, paginaParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_Opcion_Crear(Nullable<int> idMenu, string nombre, string pagina, Nullable<int> ordenMenu, string usuario)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paginaParameter = pagina != null ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_Opcion_Crear", idMenuParameter, nombreParameter, paginaParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual int sp_Opcion_Eliminar(Nullable<int> idOpcion)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Opcion_Eliminar", idOpcionParameter);
        }
    
        public virtual ObjectResult<sp_Opcion_Listar_Result> sp_Opcion_Listar(Nullable<int> idOpcion, Nullable<int> idMenu, string buscarNombre, string buscarPagina, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var buscarPaginaParameter = buscarPagina != null ?
                new ObjectParameter("BuscarPagina", buscarPagina) :
                new ObjectParameter("BuscarPagina", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Opcion_Listar_Result>("sp_Opcion_Listar", idOpcionParameter, idMenuParameter, buscarNombreParameter, buscarPaginaParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Opcion_Listar_Busqueda_Result> sp_Opcion_Listar_Busqueda(string buscar, Nullable<int> idMenu, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Opcion_Listar_Busqueda_Result>("sp_Opcion_Listar_Busqueda", buscarParameter, idMenuParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Actualizar_Result> sp_Menu_Actualizar(Nullable<int> idMenu, Nullable<int> idModulo, string nombre, Nullable<int> ordenMenu, string usuario)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Actualizar_Result>("sp_Menu_Actualizar", idMenuParameter, idModuloParameter, nombreParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Crear_Result> sp_Menu_Crear(Nullable<int> idModulo, string nombre, Nullable<int> ordenMenu, string usuario)
        {
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Crear_Result>("sp_Menu_Crear", idModuloParameter, nombreParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Eliminar_Result> sp_Menu_Eliminar(Nullable<int> idMenu)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Eliminar_Result>("sp_Menu_Eliminar", idMenuParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Listar_Result> sp_Menu_Listar(Nullable<int> idMenu, Nullable<int> idModulo, string buscarNombre, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Listar_Result>("sp_Menu_Listar", idMenuParameter, idModuloParameter, buscarNombreParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Listar_Busqueda_Result> sp_Menu_Listar_Busqueda(string buscar, Nullable<int> idModulo, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Listar_Busqueda_Result>("sp_Menu_Listar_Busqueda", buscarParameter, idModuloParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Modulo_Actualizar_Result> sp_Modulo_Actualizar(Nullable<int> idModulo, string nombre, Nullable<int> ordenMenu, string usuario)
        {
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Modulo_Actualizar_Result>("sp_Modulo_Actualizar", idModuloParameter, nombreParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Modulo_Crear_Result> sp_Modulo_Crear(string nombre, Nullable<int> ordenMenu, string usuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ordenMenuParameter = ordenMenu.HasValue ?
                new ObjectParameter("OrdenMenu", ordenMenu) :
                new ObjectParameter("OrdenMenu", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Modulo_Crear_Result>("sp_Modulo_Crear", nombreParameter, ordenMenuParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Modulo_Eliminar_Result> sp_Modulo_Eliminar(Nullable<int> idModulo)
        {
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Modulo_Eliminar_Result>("sp_Modulo_Eliminar", idModuloParameter);
        }
    
        public virtual ObjectResult<sp_Modulo_Listar_Result> sp_Modulo_Listar(Nullable<int> idModulo, string buscarNombre, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var buscarNombreParameter = buscarNombre != null ?
                new ObjectParameter("BuscarNombre", buscarNombre) :
                new ObjectParameter("BuscarNombre", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Modulo_Listar_Result>("sp_Modulo_Listar", idModuloParameter, buscarNombreParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    
        public virtual ObjectResult<sp_Modulo_Listar_Busqueda_Result> sp_Modulo_Listar_Busqueda(string buscar, Nullable<int> page, Nullable<int> pageSize, string ordenPor, string ordenDir)
        {
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var ordenPorParameter = ordenPor != null ?
                new ObjectParameter("OrdenPor", ordenPor) :
                new ObjectParameter("OrdenPor", typeof(string));
    
            var ordenDirParameter = ordenDir != null ?
                new ObjectParameter("OrdenDir", ordenDir) :
                new ObjectParameter("OrdenDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Modulo_Listar_Busqueda_Result>("sp_Modulo_Listar_Busqueda", buscarParameter, pageParameter, pageSizeParameter, ordenPorParameter, ordenDirParameter);
        }
    }
}
